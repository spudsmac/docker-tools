# Usage:
#  Create a secret redis-config with an entry for a redis password:
#    apiVersion: v1
#    data:
#      redis.conf: |
#        requirepass abcdef1234
#    kind: Secret
#    metadata:
#      name: redis-config
#    type: Opaque
#  Create a secret ldap-prepopulate based on example in
#    install/ldap-prepopulate-ldif.example
---
apiVersion: v1
kind: Service
metadata:
  name: $SERVICE_NAME
spec:
  clusterIP: $AUTHELIA_IP
  selector:
    app.kubernetes.io/name: $SERVICE_NAME
  ports:
  - port: 80
---
apiVersion: apps/v1beta2
kind: Deployment
metadata:
  name: $SERVICE_NAME
  labels:
    app.kubernetes.io/name: $SERVICE_NAME
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: $SERVICE_NAME
  template:
    metadata:
      labels:
        app.kubernetes.io/name: $SERVICE_NAME
    spec:
      containers:
      - name: $SERVICE_NAME
        env:
        - name: AUTHELIA_JWT_SECRET_FILE
          value: /etc/authelia/secrets/jwt_secret
        - name: AUTHELIA_SESSION_SECRET_FILE
          value: /etc/authelia/secrets/session_secret
        - name: AUTHELIA_SESSION_REDIS_PASSWORD_FILE
          value: /etc/authelia/secrets/redis_password
        - name: AUTHELIA_STORAGE_MYSQL_PASSWORD_FILE
          value: /etc/authelia/secrets/mysql_password
        - name: AUTHELIA_NOTIFIER_SMTP_PASSWORD_FILE
          value: /etc/authelia/secrets/smtp_password
        - name: AUTHELIA_AUTHENTICATION_BACKEND_LDAP_PASSWORD_FILE
          value: /etc/authelia/secrets/ldap_password
        image: authelia/authelia:$VERSION_AUTHELIA
        ports:
        - containerPort: 80
        resources:
          limits:
            memory: 512Mi
          requests:
            cpu: 50m
            memory: 256Mi
        volumeMounts:
        - mountPath: /etc/authelia/configuration.yml
          name: config
          subPath: configuration.yml
        - mountPath: /etc/authelia/secrets
          name: secrets
      dnsConfig:
        options:
        - name: use-vc
        - name: ndots
      volumes:
      - name: config
        configMap:
          name: $SERVICE_NAME
      - name: secrets
        secret:
          secretName: authelia-secrets
          defaultMode: 0400
---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: authelia-ingress
  annotations:
    cert-manager.io/cluster-issuer: letsencrypt-prod
    kubernetes.io/ingress.class: nginx
spec:
  tls:
  - secretName: tls-$SERVICE_NAME
    hosts:
    - authtotp.$DOMAIN
  rules:
  - host: authtotp.$DOMAIN
    http:
      paths:
      - path: /
        backend:
          serviceName: $SERVICE_NAME
          servicePort: 80
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/name: ldap
  name: ldap
spec:
  ports:
  - port: 389
  selector:
    app.kubernetes.io/name: ldap
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/name: ldap
  name: ldap
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: ldap
  template:
    metadata:
      labels:
        app.kubernetes.io/name: ldap
    spec:
      containers:
      - name: ldap
        env:
        - { name: SLAPD_ORGANISATION, value: Community Internet }
        - { name: SLAPD_DOMAIN, value: $DOMAIN }
        - { name: SLAPD_ADDITIONAL_MODULES, value: memberof }
        - { name: SLAPD_ADDITIONAL_SCHEMAS, value: openldap }
        - { name: SLAPD_FORCE_RECONFIGURE, value: "true" }
        - name: SLAPD_PASSWORD
          valueFrom:
            secretKeyRef:
              name: authelia-secrets
              key: ldap_password
        image: dinkel/openldap:latest
        ports:
        - containerPort: 389
        volumeMounts:
        - mountPath: /etc/ldap.dist/prepopulate
          name: prepopulate
      volumes:
      - name: prepopulate
        secret:
          secretName: ldap-prepopulate
---
apiVersion: v1
kind: Service
metadata:
  name: redis
spec:
  clusterIP: None
  selector:
    app.kubernetes.io/name: redis
  ports:
  - port: 6379
---
apiVersion: apps/v1beta2
kind: Deployment
metadata:
  name: redis
  labels:
    app.kubernetes.io/name: redis
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: redis
  template:
    metadata:
      labels:
        app.kubernetes.io/name: redis
    spec:
      containers:
      - name: redis
        command: [redis-server]
        args: [/etc/redis/redis.conf]
        image: redis:3.2.11-alpine
        ports:
        - containerPort: 6379
        volumeMounts:
        - mountPath: /etc/redis/redis.conf
          name: redis-config
          subPath: redis.conf
      volumes:
      - name: redis-config
        secret:
          secretName: redis-config
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: $SERVICE_NAME
data:
  configuration.yml: |
    port: 80
    # set to trace for troubleshooting
    log_level: info

    authentication_backend:
      ldap:
        url: ldap://ldap
        base_dn: $AUTHELIA_BASE_DN
        additional_users_dn: ou=users
        users_filter: (&({username_attribute}={input})(objectClass=inetOrgPerson))
        username_attribute: uid
        additional_users_dn: ou=users
        additional_groups_dn: ou=groups
        groups_filter: (&(member={dn})(objectclass=groupOfNames))
        group_name_attribute: cn
        mail_attribute: mail
        user: cn=admin,$AUTHELIA_BASE_DN

    # Access Control
    access_control:
      default_policy: bypass
      rules:
      - domain: $AUTHELIA_BYPASS_DOMAIN
        policy: bypass
        subject: $AUTHELIA_BYPASS_USER
      - domain:
        - "*.$DOMAIN"
        - "*.$MYDOMAIN"
        policy: two_factor

    # Configuration of session cookies
    session:
      expiration: 1209600000
      inactivity: 300000
      domain: $AUTHELIA_SESSION_DOMAIN
      redis:
        host: redis
        port: 6379

    # Configuration of the authentication regulation mechanism.
    regulation:
      max_retries: 3
      find_time: 120
      ban_time: 300

    # The directory where the DB files will be saved
    storage:
      mysql:
        host: db00
        port: 3306
        database: authelia
        username: authelia

    # Configuration of the notification system.
    notifier:
      smtp:
        username: $AUTHELIA_SMTP_USERNAME
        host: $AUTHELIA_SMTP_HOST
        port: $AUTHELIA_SMTP_PORT
        sender: $AUTHELIA_SMTP_SENDER
